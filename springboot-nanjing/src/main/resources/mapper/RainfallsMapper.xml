<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--客户映射 指定到dao接口 -->
<mapper namespace="com.nanjing.weather.dao.RainfallsMapper">
    <select id="findAll" resultType="com.nanjing.weather.domain.Rainfalls">
        select * from rainfalls;

    </select>

    <select id="findRainfallsByid" parameterType="String" resultType="com.nanjing.weather.domain.Rainfalls">
        select  * from rainfalls where  station_id=#{id};

    </select>

    <insert id="add" parameterType="com.nanjing.weather.domain.Rainfalls">
       INSERT INTO `rainfalls` (`station_id`, `value`, `routine_time`, `create_time`) VALUES (#{id},#{value}, #{routine_time}, #{create_time});
    </insert>

    <delete id="delete" parameterType="String">
      delete  from `rainfalls`where  station_id=#{id};
</delete>

    <update id="update" parameterType="com.nanjing.weather.domain.Rainfalls">
       UPDATE `rainfalls` SET `station_id`=#{id}, `value`=#{value}, `data_time`=#{routine_time}, `create_time`=#{create_time} WHERE station_id=#{id} ;

    </update>

    <select id="findAllByTerm"  resultType="com.nanjing.weather.domain.Rainfalls">
      SELECT * FROM rainfalls where routine_time = (SELECT max(routine_time) FROM `temperatures`) and create_time BETWEEN (SELECT date_sub(NOW(),interval #{0} hour)) and NOW() and value >= #{1};
    </select>

    <resultMap id="findAllBySomeMap" type="com.nanjing.weather.entity.RainFall">
        <result column="station_id" property="stationId"/>
        <collection property="rainFallCenter" ofType="com.nanjing.weather.entity.RainFallCenter">
            <result column="value" property="value"/>
            <result column="routine_time" property="routineTime"/>
            <result column="create_time" property="createTime"/>
        </collection>
    </resultMap>

    <select id="findAllBySomeTerm" resultMap="findAllBySomeMap">
        SELECT * from rainfalls where 1 = 1
        <if test="createTime != null and routineTime != null">
            and routine_time BETWEEN #{createTime} AND #{routineTime}
        </if>
        <if test="value != null">
            and value >= #{value}
        </if>

    </select>
</mapper>